.wrapper {
  /* 
when the parent element has "position: relative", the children with
"position: absolute" will anchor on the parent, NOT the window

I stack the "front" and "shadow" inside this wrapper to create the shadow effect
while hovering

Also I can change the width, height and etc using the "inputs" 
*/
  position: relative;
  cursor: pointer;
  min-width: 20px; /* default size */
  min-height: 20px; /* default size */
  /* color: transparent; */
  /* border-style: solid;
  border-width: 6px; */
}

.front {
  position: absolute;
  bottom: 0;
  left: 0;
  z-index: 5;
  color: black;
  font-size: inherit;
  font-weight: inherit;
  border-radius: 4px;
  border-color: var(--main-600);
  border: solid 2px var(--main-600);
  transition: all 0.3s;
  cursor: pointer;
  /* the children should just use the parent wrapper's size
    4px is the border width/height
  */
  width: calc(100% + 4px);
  height: calc(100% + 4px);
  display: flex;
  justify-content: center;
  align-items: center;
}

.red {
  border: solid 2px var(--color-negative-2);
  background-color: var(--color-negative-1);
}
.green {
  border: solid 2px var(--color-positive-2);
  background-color: var(--color-positive-1);
}
.orange {
  border: solid 2px var(--color-orange);
  background-color: var(--color-orange-light);
}

.shadow {
  position: absolute;
  bottom: 0;
  left: 0;
  z-index: 1;
  border-radius: 4px;
  border: solid 2px var(--main-900);
  color: var(--main-900);
  background-color: var(--main-900);
  width: 100%;
  height: 100%;
}

.wrapper:hover .front:not(.disabled) {
  transform: translateX(-4px) translateY(-4px);
  transition: all 0.3s;
}
.wrapper:active .front:not(.disabled) {
  background-color: var(--main-500);
  transform: translateX(0px) translateY(0px);
  transition: all 0.1s;
}
.wrapper:active .front.red {
  background-color: var(--color-negative-1);
}
.wrapper:active .front.green {
  background-color: var(--color-positive-1);
}
.wrapper:active .front.orange {
  background-color: var(--color-orange);
}

.active {
  background-color: var(--main-600);
}

.text {
  animation: fadeIn 1s;
}
